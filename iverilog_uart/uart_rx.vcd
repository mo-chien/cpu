$date
	Fri Jul 29 10:00:39 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_uart_rx $end
$var wire 1 ! rx_valid $end
$var wire 8 " data_out [7:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst_n $end
$var reg 1 % rxd $end
$scope module u_uart_rx $end
$var wire 1 # clk $end
$var wire 8 & data_out [7:0] $end
$var wire 1 $ rst_n $end
$var wire 1 ' rx_neg_edge $end
$var wire 1 % rxd $end
$var wire 1 ( cnt_end2 $end
$var wire 1 ) cnt_end1 $end
$var wire 4 * cnt2 [3:0] $end
$var wire 3 + cnt1 [2:0] $end
$var reg 1 , add_flag $end
$var reg 1 - bitlenth_counter_add_reg1 $end
$var reg 1 . bitlenth_counter_add_reg2 $end
$var reg 1 / bitlenth_counter_add_reg3 $end
$var reg 8 0 rx_data [7:0] $end
$var reg 1 ! rx_valid $end
$scope function clogb2 $end
$var integer 32 1 depth [31:0] $end
$upscope $end
$scope module bitlenth_counter $end
$var wire 1 # clk $end
$var wire 1 , cnt_add $end
$var wire 1 ) cnt_end $end
$var wire 1 $ rst_n $end
$var reg 3 2 cnt [2:0] $end
$scope function clogb2 $end
$var integer 32 3 depth [31:0] $end
$upscope $end
$upscope $end
$scope module bitnum_counter $end
$var wire 1 # clk $end
$var wire 1 ) cnt_add $end
$var wire 1 ( cnt_end $end
$var wire 1 $ rst_n $end
$var reg 4 4 cnt [3:0] $end
$scope function clogb2 $end
$var integer 32 5 depth [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 5
b0 4
bx 3
b0 2
bx 1
b0 0
1/
1.
1-
0,
b0 +
b0 *
0)
0(
0'
b0 &
1%
0$
0#
b0 "
0!
$end
#5000
1#
#10000
0#
#15000
1#
#20000
0#
0%
1$
#25000
0-
1#
#30000
0#
#35000
1'
0.
1#
#40000
0#
#45000
0'
1,
0/
1#
#50000
0#
#55000
b1 +
b1 2
1#
#60000
0#
#65000
b10 +
b10 2
1#
#70000
0#
1%
#75000
b11 +
b11 2
1-
1#
#80000
0#
#85000
1)
1.
b100 +
b100 2
1#
#90000
0#
#95000
0)
b0 +
b0 2
b1 *
b1 4
1/
1#
#100000
0#
#105000
b1 +
b1 2
1#
#110000
0#
#115000
b10 +
b10 2
1#
#120000
0#
#125000
b10000000 "
b10000000 &
b10000000 0
b11 +
b11 2
1#
#130000
0#
#135000
1)
b100 +
b100 2
1#
#140000
0#
#145000
0)
b10 *
b10 4
b0 +
b0 2
1#
#150000
0#
#155000
b1 +
b1 2
1#
#160000
0#
#165000
b10 +
b10 2
1#
#170000
0#
#175000
b11 +
b11 2
b11000000 "
b11000000 &
b11000000 0
1#
#180000
0#
#185000
1)
b100 +
b100 2
1#
#190000
0#
#195000
0)
b0 +
b0 2
b11 *
b11 4
1#
#200000
0#
#205000
b1 +
b1 2
1#
#210000
0#
#215000
b10 +
b10 2
1#
#220000
0#
#225000
b11100000 "
b11100000 &
b11100000 0
b11 +
b11 2
1#
#230000
0#
#235000
1)
b100 +
b100 2
1#
#240000
0#
#245000
0)
b100 *
b100 4
b0 +
b0 2
1#
#250000
0#
#255000
b1 +
b1 2
1#
#260000
0#
#265000
b10 +
b10 2
1#
#270000
0#
0%
#275000
b11 +
b11 2
0-
b11110000 "
b11110000 &
b11110000 0
1#
#280000
0#
#285000
1'
1)
0.
b100 +
b100 2
1#
#290000
0#
#295000
0)
0'
b0 +
b0 2
b101 *
b101 4
0/
1#
#300000
0#
#305000
b1 +
b1 2
1#
#310000
0#
#315000
b10 +
b10 2
1#
#320000
0#
#325000
b1111000 "
b1111000 &
b1111000 0
b11 +
b11 2
1#
#330000
0#
#335000
1)
b100 +
b100 2
1#
#340000
0#
#345000
0)
b110 *
b110 4
b0 +
b0 2
1#
#350000
0#
#355000
b1 +
b1 2
1#
#360000
0#
#365000
b10 +
b10 2
1#
#370000
0#
#375000
b11 +
b11 2
b111100 "
b111100 &
b111100 0
1#
#380000
0#
#385000
1)
b100 +
b100 2
1#
#390000
0#
#395000
0)
b0 +
b0 2
b111 *
b111 4
1#
#400000
0#
#405000
b1 +
b1 2
1#
#410000
0#
#415000
b10 +
b10 2
1#
#420000
0#
#425000
b11110 "
b11110 &
b11110 0
b11 +
b11 2
1#
#430000
0#
#435000
1)
b100 +
b100 2
1#
#440000
0#
#445000
0)
b1000 *
b1000 4
b0 +
b0 2
1#
#450000
0#
#455000
b1 +
b1 2
1#
#460000
0#
#465000
b10 +
b10 2
1#
#470000
0#
1%
#475000
b11 +
b11 2
1-
b1111 "
b1111 &
b1111 0
1#
#480000
0#
#485000
1(
1)
1.
b100 +
b100 2
1#
#490000
0#
#495000
0(
0)
b0 +
b0 2
b0 *
b0 4
1/
1!
0,
1#
#500000
0#
#505000
1#
#510000
0#
#515000
1#
#520000
0#
#525000
1#
#530000
0#
#535000
1#
#540000
0#
#545000
1#
#550000
0#
#555000
1#
#560000
0#
#565000
1#
#570000
0#
